@use "reset.scss";
@use "prism-theme.scss";
@use "variables.scss";
@use "sass:color";

// Default vertical space between items on the page (paragraphs, lists, etc.)
$spacing: 1.5rem;

::selection {
  background: variables.$accent-fade;
}

html {
  font-size: 19px;
  font-family: variables.$main-font;
}

dialog:has(img) {
  position: fixed;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 75%;
  border: unset;

  & > img {
    cursor: unset;
  }
}

::backdrop {
  background: variables.$bg-dark;
  opacity: 0.75;
  cursor: pointer;
}

body {
  background: variables.$bg;
  color: variables.$fg;
  display: flex;
  flex-direction: column;
  align-items: center;
  line-height: 1.75;

  // Prevent scrolling when opening a modal
  &:has(dialog[open]) {
    overflow: hidden;
  }
}

a {
  color: variables.$accent;
  text-decoration-thickness: 2px;

  &:hover {
    background-image: linear-gradient(
      90deg,
      variables.$accent-fade,
      variables.$accent-fade
    );
    background-size: 100% 30px;
    background-repeat: no-repeat;
    background-position: left 0.7em;
    padding-block: 0.1em;
  }

  // Inline code annotations within a link
  & > code {
    background: unset !important;
    padding-left: 0px !important;
    padding-right: 0px !important;
  }
}

.name-header {
  font-size: 2rem;
}

nav[aria-label="site-nav"] {
  font-size: 1.25rem;
  padding-bottom: 1.5rem;
  padding-top: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  background: variables.$bg-dark;
  width: 100%;

  a {
    text-decoration-thickness: 3px;
  }

  ul {
    display: flex;
    margin-left: 1rem;
    margin-right: 1rem;
    flex-wrap: wrap;
    column-gap: 2rem;
    justify-content: center;
    margin-bottom: unset;

    li {
      display: inline;

      &[aria-current="page"] a {
        color: variables.$fg;
        &:hover {
          background-image: linear-gradient(
            90deg,
            variables.$fg-fade,
            variables.$fg-fade
          );
        }
      }
    }
  }
}

ol,
ul {
  list-style-position: inside;
  margin-bottom: $spacing;
}

li::marker {
  font-weight: bold;
  color: variables.$fg-bright;
}

img {
  border: 1px solid variables.$accent-fade;
  border-radius: 5px;
  cursor: pointer;

  // Taken from https://www.zachleat.com/web/fluid-images/
  max-width: 100%;
  // Preserve aspect ratio
  &[width][height] {
    height: auto;
  }
  // Let SVG scale without boundaries
  &[src$=".svg"] {
    width: 100%;
    height: auto;
    max-width: none;
  }
}

pre {
  margin-bottom: $spacing !important;
}

code:not([class^="language"]) {
  background: #2b2b2b;
  font-family: "Fira Mono", monospace;
  padding: 0.1rem 0.3rem;
}

main {
  width: min(95%, 65ch);
}

h1 {
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: $spacing;
  position: relative;
  margin-top: 1rem;
  line-height: 1.3;
  color: variables.$fg-bright;

  &::after {
    content: "";
    position: absolute;
    width: 50%;
    border-bottom: 2px solid variables.$accent-fade;
    bottom: 0;
    left: 0;
  }
}

@for $i from 2 through 6 {
  h#{$i} {
    color: variables.$fg-bright;
    font-size: 1.8rem - ($i - 2) * 0.3;
    font-weight: bold;
    position: relative;
  }

  // headers with a link to a section
  h#{$i} > a.header-anchor {
    color: variables.$fg-bright;
    text-decoration: none;

    &:hover {
      background-image: unset;
      text-decoration: underline;
    }
  }
}

b,
strong {
  font-weight: bold;
  color: variables.$fg-bright;
}

em {
  font-style: italic;
}

p {
  margin-bottom: $spacing;
  overflow-wrap: break-word;
}

.full {
  width: min(90%, calc(100% - 1rem));
}

.posts {
  list-style: none;
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;

  &-item {
    margin-bottom: 1rem;

    &-title {
      font-size: 1.5rem;
    }

    &-time {
      color: variables.$fg-fade;
      font-size: 0.9em;
    }

    &-description {
      margin-bottom: unset;
    }
  }
}

.projects {
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;

  &-item {
    background: variables.$bg-dark;
    border: 1px solid variables.$accent-fade;
    border-radius: 5px;
    padding: 1rem;
    width: calc(100% * var(--importance));
    height: min-content;
    opacity: 0%;
    animation-name: appear;
    animation-duration: 400ms;
    animation-delay: var(--delay);
    animation-fill-mode: forwards;
    text-align: center;

    @keyframes appear {
      to {
        opacity: 100%;
      }
    }

    @media (max-width: 720px) {
      width: 100%;
    }

    &-img {
      border: none;
      width: 100%;
    }
  }
}
